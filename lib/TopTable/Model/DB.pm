package TopTable::Model::DB;

use strict;
use base 'Catalyst::Model::DBIC::Schema';

__PACKAGE__->config(
    schema_class => 'TopTable::Schema',
    
    connect_info => {
        dsn => 'dbi:mysql:toptable',
        user => '',
        password => '',
    }
);

use TopTable::Maketext;
use Data::Printer;

sub ACCEPT_CONTEXT {
  my ( $self, $c ) = @_;
  
  # We have to check the ref of $c here because this model seems to get called by Catalyst as part of the instantiation, before my code kicks in
  # and in these cases, $c is the string "TopTable", not a ref to the TopTable object.
  if ( ref($c) eq "TopTable" ) {
    $self->schema->_set_maketext(TopTable::Maketext->get_handle($c->locale));
  }
  
  return $self;
}

=head1 NAME

TopTable::Model::DB - Catalyst DBIC Schema Model

=head1 SYNOPSIS

See L<TopTable>

=head1 DESCRIPTION

L<Catalyst::Model::DBIC::Schema> Model using schema L<TopTable::Schema>

=head1 GENERATED BY

Catalyst::Helper::Model::DBIC::Schema - 0.61

=head1 AUTHOR

Chris Welch

=head1 LICENSE

This library is free software, you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

1;
