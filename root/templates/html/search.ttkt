<form method="get" action="[% form_action %]">
[%
# Search-specific form options
IF search_form_include;
  SET include_script = "html/search/includes/" _ search_form_include _ ".ttkt";
  INCLUDE $include_script;
END;
-%]
  <div class="field-container-search">
    <input type="search" name="q" value="[% q %]" placeholder="[% placeholder %]" autocomplete="off" class="search-box" id="search-box" />
    <input type="submit" value="[% c.maketext("form.button.search") %]" class="btn btn-eac" />
  </div>
  <div class="clear-fix"></div>
</form>

[%
IF search_results.size;
  # Use PROCESS instead of INCLUDE so that the page_links_text is defined in the current template thereafter
  PROCESS "html/generic/pagination-qs.ttkt" object_plural = c.maketext("object.plural.search-results");
  page_links_text;
-%]
<div id="search-results">
[%
  FOREACH result = search_results;
    SET display = result.search_display;
    SWITCH display.type;
      CASE "club";
        SET uri = c.uri_for_action("/clubs/view_current_season", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET club = c.model("DB::club").find(result.id);
        ELSE;
          SET club = result;
        END;
        
        # Get description text
        SET last_season_entered = club.last_season_entered;
        SET teams_count = 0;
        SET players_count = 0;
        SET teams = [];
        SET players = [];
        
        IF last_season_entered;
          last_season_name = last_season_entered.name | html_entity;
          SET teams = club.teams_in_club({season => last_season_entered});
          
          # size is sometimes returning an incorrect value for some reason, so we are using max + 1
          #SET teams_count = teams.size;
          SET teams_count = teams.max + 1;
          SET players = club.players_in_club({season => last_season_entered});
          SET players_count = players.size;
        ELSE;
          SET last_season_name = c.maketext("search-results.no-seasons-entered");
          SET teams_count = 0;
          SET players_count = 0;
        END;
        
        venue = club.venue.name | html_entity;
        SET description = c.maketext("search-results.club.description", last_season_name, teams_count, players_count, venue);
      CASE "division";
        SET uri = c.uri_for_action("/divisions/view_current_season", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET division = c.model("DB::division").find( result.id );
        ELSE;
          SET division = result;
        END;
        
        # Set description text
        last_season_used = division.last_season_used;
        last_season_name = last_season_used.name | html_entity;
        
        IF last_season_name;
          SET teams = division.teams({season => last_season_used}).size;
        ELSE;
          SET last_season_name = c.maketext("divisions.not-yet-used");
          SET teams = 0;
        END;
        
        SET description = c.maketext("search-results.division.description", last_season_name, teams);
      CASE "fixtures-grid";
        SET uri = c.uri_for_action("/fixtures-grids/view_current_season", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET grid = c.model("DB::FixturesGrid").find( result.id );
        ELSE;
          SET grid = result;
        END;
        
        # Get description text
        SET description = c.maketext("search-results.fixtures-grid.description", grid.maximum_teams, grid.fixtures_repeated);
      CASE "team-match";
        SET uri = c.uri_for_action("/matches/team/view_by_url_keys", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET ids = result.id.split(",");
          SET date = ids.2 _ "-" _ ids.3 _ "-" _ ids.4;
          SET match = c.model("DB::TeamMatch").find(ids.0, ids.1, date);
          SET home_score = match.home_team_match_score;
          SET away_score = match.away_team_match_score;
          SET home_team = match.home_team.club.short_name _ " " _ match.home_team.name;
          SET away_team = match.away_team.club.short_name _ " " _ match.away_team.name;
        ELSE;
          SET match = result;
          SET home_score = match.home_score;
          SET away_score = match.away_score;
          SET home_team = match.home_team_name;
          SET away_team = match.away_team_name;
        END;
        
        SET date = match.actual_date;
        CALL date.set_locale( c.locale );
        
        IF match.cancelled;
          SET description = c.maketext("search-results.team-match.cancelled.description", date.dmy("/"));
        ELSE;
          IF home_score OR home_score;
            SET score = home_score _ "-" _ away_score;
            SET description = c.maketext("search-results.team-match.played.description", date.dmy("/"), score);
          ELSE;
            SET description = c.maketext("search-results.team-match.scheduled.description", date.dmy("/"));
          END;
        END;
        
        # Get description text
      CASE "person";
        SET uri = c.uri_for_action("/people/view_current_season", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET person = c.model("DB::Person").find(result.id);
        ELSE;
          SET person = result;
        END;
        
        SET last_season = person.last_season_entered;
        last_season_name = last_season.season.name | html_entity;
        club = last_season.team_season.club_season.short_name | html_entity;
        team = last_season.team_season.name | html_entity;
        
        # Get description text
        SET description = c.maketext("search-results.person.description", last_season_name, club, team);
      CASE "season";
        SET uri = c.uri_for_action("/seasons/view", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET season = c.model("DB::Season").find( result.id );
        ELSE;
          SET season = result;
        END;
        
        # Get description text
        SET description = c.maketext("search-results.season.description", season.start_date_long, season.end_date_long);
      CASE "team";
        SET uri = c.uri_for_action("/teams/view_current_season_by_url_key", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET team = c.model("DB::team").find( result.id, {prefetch = club});
          
          # Get directly from clubs table
          club = team.club.full_name | html_entity;
        ELSE;
          SET team = result;
          
          # This is a TeamClubView object, so we have the club details already in this view
          club = team.club_full_name | html_entity;
        END;
        
        last_season_name = team.last_season_entered.name | html_entity;
        
        # Get description text
        SET description = c.maketext("search-results.team.description", last_season_name, club);
      CASE "user";
        SET uri = c.uri_for_action("/users/view", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET user = c.model("DB::User").find(result.id);
        ELSE;
          SET user = result;
        END;
        
        # Get description text
        SET description = c.maketext("search-results.user.description", user.registered_long_date);
      CASE "venue";
        SET uri = c.uri_for_action("/venues/view", display.url_keys);
        
        IF search_all;
          # If we're searching everything, the result is from the view, not the specific table we want
          SET venue = c.model("DB::venue").find( result.id );
        ELSE;
          SET venue = result;
        END;
        
        address = venue.full_address(", ") | html_entity;
        
        # Get description text
        SET description = c.maketext("search-results.venue.description", address);
      CASE "template-league-table-ranking";
        SET uri = c.uri_for_action("/templates/league-table-ranking/view", display.url_keys);
        
        # Get description text
        SET description = c.maketext("search-results.template-league-table-ranking.description");
      CASE "template-match-individual";
        SET uri = c.uri_for_action("/templates/match/individual/view", display.url_keys);
        
        # Get description text
        SET description = c.maketext("search-results.template-match-individual.description");
      CASE "template-match-team";
        SET uri = c.uri_for_action("/templates/match/team/view", display.url_keys);
        
        # Get description text
        SET description = c.maketext("search-results.template-match-team.description");
      END;
%]
<div class="search-result">
<a href="[% uri %]"><b>[% display.name | html_entity %]</b></a><br />
[% description %]
</div>
[%
  END;
%]
</div>
[%
page_links_text;
ELSIF q != "";
c.maketext("search.results.no-results", q);
END;
%]
