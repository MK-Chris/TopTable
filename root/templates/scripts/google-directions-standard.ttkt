  
  // Do the geocoding requests
  var geocoder                = new google.maps.Geocoder();
  var directions_service      = new google.maps.DirectionsService();
  var destination_coordinates = new google.maps.LatLng([% map_latitude %], [% map_longitude %]);
  var directions_map_init     = false;
  var directions_map, directions_display;
  
  function handle_geo(position) {
    // Get the latitude / longitude co-ordinates
    var origin_coordinates      = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
    
    geocoder.geocode({"location": origin_coordinates}, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        if (results[1]) {
          map.setZoom(11);
          $("#search_type").val("gps");
          $("#lat").val(position.coords.latitude);
          $("#lng").val(position.coords.longitude);
          $("#user_location").val( results[1].formatted_address );
          get_directions(origin_coordinates, destination_coordinates);
        } else {
        $("div.error-message span.message-text").text("No results found.");
        $("div.error-message").show();
        }
      } else {
        $("div.error-message span.message-text").text("Geocoder failed due to: " + status);
        $("div.error-message").show();
      }
    });
  }
  
  // Handle the geocoding error
  function show_geo_error(error) {
    switch(error.code) {
      case error.PERMISSION_DENIED:
        $("div.error-message span.message-text").text("User denied the request for Geolocation.");
        $("div.error-message").show();
        break;
      case error.POSITION_UNAVAILABLE:
        $("div.error-message span.message-text").text("Location information is unavailable.");
        $("div.error-message").show();
        break;
      case error.TIMEOUT:
        $("div.error-message span.message-text").text("The request to get user location timed out.");
        $("div.error-message").show();
        break;
      case error.UNKNOWN_ERROR:
        $("div.error-message span.message-text").text("An unknown error occurred.");
        $("div.error-message").show();
        break;
    }
  }
  
  // Initialise directions map
  function initialise_directions_map() {
    $("#directions-canvas").show();
    $("#directions-steps").show();
    
    directions_display = new google.maps.DirectionsRenderer({
      draggable: true
    });
    var map_options = {
      zoom:7,
      center: destination_coordinates
    };
    directions_map = new google.maps.Map( document.getElementById("directions-canvas"), map_options );
    directions_display.setMap(directions_map);
  }
  
  // Request directions
  function get_directions(route_origin, route_destination, method) {
    var travel_mode = $("#travel_mode").val();
    var request     = {
      origin: route_origin,
      destination: route_destination,
      travelMode: google.maps.TravelMode[travel_mode],
      unitSystem: google.maps.UnitSystem.IMPERIAL
    };
    
    initialise_directions_map();
    
    directions_service.route(request, function(response, status) {
      if (status == google.maps.DirectionsStatus.OK) {
        directions_display.setDirections(response);
        $("#directions-steps").text("");
        directions_display.setPanel(document.getElementById("directions-steps"));
      }
    });
    
    google.maps.event.addListener(directions_display, "directions_changed", function() {
      directions_display.setMap(directions_map);
    });
  }
  